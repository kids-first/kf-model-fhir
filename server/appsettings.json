{
  "Administration": {
    "Repository": "SQLite",
    "MongoDbOptions": {
      "ConnectionString": "mongodb://localhost/vonkadmin",
      "EntryCollection": "vonkentries"
    },
    "CosmosDbOptions": {
      "ConnectionString": "mongodb://<password>@<server>:10255/vonk-admin?ssl=true&replicaSet=globaldb",
      "EntryCollection": "vonkentries"
    },
    "SqlDbOptions": {
      "ConnectionString": "connectionstring to your Vonk Admin SQL Server database (SQL2012 or newer); Set MultipleActiveResultSets=True",
      "AutoUpdateDatabase": true

    },
    "SQLiteDbOptions": {
      "ConnectionString": "Data Source=./data/vonkadmin.db;Cache=Shared",
      "AutoUpdateDatabase": true

    },
    "Security": {
      "AllowedNetworks": [ "127.0.0.1", "::1" ],
      "OperationsToBeSecured": [ "reindex", "reset", "preload", "importResources" ]
    }
  },
  "License": {
    "LicenseFile": "./license/vonk-trial-license.json",
    "RequestInfoFile": "./.vonk-request-info.json",
    "WriteRequestInfoFileInterval": 15
  },
  "Repository": "MongoDb",
  "Hosting": {
    "HttpPort": 4080
  },
  "Validation": {
    "Parsing": "Permissive",
    "Level": "Full",
    "AllowedProfiles": []
  },
  "Cache": {
    "MaxConformanceResources": 5000
  },
  "MongoDbOptions": {
    "ConnectionString": "mongodb://vonk-mongo-db/vonkstu3",
    "EntryCollection": "vonkentries",
    "SimulateTransactions": "false"
  },
  "CosmosDbOptions": {
    "ConnectionString": "mongodb://<password>@<server>:10255/vonk?ssl=true&replicaSet=globaldb",
    "EntryCollection": "vonkentries"
  },
  "SqlDbOptions": {
    "ConnectionString": "connectionstring to your Vonk SQL Server database (SQL2012 or newer); Set MultipleActiveResultSets=True",
    "AutoUpdateDatabase": true

  },
  "SQLiteDbOptions": {
    "ConnectionString": "Data Source=./data/vonkdata.db;Cache=Shared",
    "AutoUpdateDatabase": true

  },
  "MemoryOptions": {
    "SimulateTransactions": false
  },
  "BundleOptions": {
    "DefaultCount": 10,
    "MaxCount": 50
  },
  "HistoryOptions": {
    "MaxReturnedResults": 100
  },
  "SizeLimits": {
    "MaxResourceSize": "1MiB",
    "MaxBatchSize": "5MiB",
    "MaxBatchEntries": 200
  },
  "ReindexOptions": {
    "BatchSize": 100,
    "MaxDegreeOfParallelism": 10
  },
  "FhirCapabilities": {
    "ConditionalDeleteOptions": {
      "ConditionalDeleteType": "Single",
      "ConditionalDeleteMaxItems": 1
    }
  },
  "SupportedInteractions": {
    "InstanceLevelInteractions": "read, vread, update, delete, history, conditional_delete, conditional_update, $validate, $validate-code, $expand, $compose, $meta, $meta-add",
    "TypeLevelInteractions": "create, search, history, conditional_create, compartment_type_search, $validate, $snapshot, $validate-code, $expand, $lookup, $compose",
    "WholeSystemInteractions": "capabilities, batch, transaction, history, search, compartment_system_search, $validate"
  },
  "SupportedModel": {
  },
  "SubscriptionEvaluatorOptions": {
    "Enabled": true,
    "RepeatPeriod": 20000,
    "SubscriptionBatchSize": 1
  },
  "AdministrationImportOptions": {
    "ImportDirectory": "./conformance/import",
    "ImportedDirectory": "./conformance/imported",
    "MaxInParallel": 5
  },
  "SmartAuthorizationOptions": {
    "Enabled": false,
    "Filters": [
      {
        "FilterType": "Patient",
        "FilterArgument": "identifier=#patient#"
      },
      {
        "FilterType": "Encounter",
        "FilterArgument": "identifier=#encounter#"
      },
      {
        "FilterType": "Location",
        "FilterArgument": "identifier=#location#"
      }
    ],
    "Authority": "url-to-your-identity-provider",
    "Audience": "vonk",
    "RequireHttpsToProvider": false,
    "Protected": {
      "InstanceLevelInteractions": "read, vread, update, delete, history, conditional_delete, conditional_update, $validate, $meta, $meta-add",
      "TypeLevelInteractions": "create, search, history, conditional_create, compartment_type_search",
      "WholeSystemInteractions": "batch, transaction, history, search, compartment_system_search"
    }
  },
  "PipelineOptions": {
    "PluginDirectory": "./plugins",
    "Branches": [
      {
        "Path": "/",
        "Include": [
          "Vonk.Core",
          "Vonk.Fhir.R3",
          "Vonk.Repository.Sql.SqlVonkConfiguration",
          "Vonk.Repository.Sqlite.SqliteVonkConfiguration",
          "Vonk.Repository.MongoDb.MongoDbVonkConfiguration",
          "Vonk.Repository.CosmosDb.CosmosDbVonkConfiguration",
          "Vonk.Repository.Memory.MemoryVonkConfiguration",
          "Vonk.Subscriptions",
          "Vonk.Smart",
          "Vonk.UI.Demo"
        ],
        "Exclude":[
          "Vonk.Repository.Memory.MemoryVonkConfiguration",
          "Vonk.Repository.Sql.SqlVonkConfiguration",
          "Vonk.Repository.Sqlite.SqliteVonkConfiguration",
          "Vonk.Repository.CosmosDb.CosmosDbVonkConfiguration"
        ]
      },
      {
        "Path": "/administration",
        "Include": [
          "Vonk.Core",
          "Vonk.Fhir.R3",
          "Vonk.Repository.Sql.SqlAdministrationConfiguration",
          "Vonk.Repository.Sqlite.SqliteAdministrationConfiguration",
          "Vonk.Repository.MongoDb.MongoDbAdminConfiguration",
          "Vonk.Repository.Memory.MemoryAdministrationConfiguration",
          "Vonk.Core.Operations.Terminology",
          "Vonk.Administration"
        ],
        "Exclude": [
          "Vonk.Core.Operations",
          "Vonk.Core.Licensing.LicenseRequestJobConfiguration",
          "Vonk.Repository.Memory.MemoryAdministrationConfiguration",
          "Vonk.Repository.Sql.SqlAdministrationConfiguration",
          "Vonk.Repository.MongoDb.MongoDbAdminConfiguration"
        ]
      }
    ]
  }
}
